services:
    AppBundle\Service\BinanceService:
        arguments:
            $binanceApi: 'Binance\API'
            $binanceApiKey: '%binance_app_api_key%'
            $binanceSecretKey: '%binance_app_secret_key%'
            $tokenStorage: '@security.token_storage'
            $entityManager: '@Doctrine\ORM\EntityManagerInterface'
            $redisService: '@redis_service'

    AppBundle\Service\TwitterService:
        arguments:
            $oauth: 'Abraham\TwitterOAuth\TwitterOAuth'
            $callbackUrl: '%twitter_callback_url%'
            $session: '@session'

    AppBundle\Service\UserBinanceService:
        arguments:
            $binanceApi: 'Binance\API'

    consumer.rule:
        class: AppBundle\Consumer\RuleConsumer
        arguments:
            - '@AppBundle\Service\BinanceService'
            - '@AppBundle\Service\TwitterService'
            - '@Doctrine\ORM\EntityManagerInterface'
            - '@Symfony\Component\DependencyInjection\ContainerInterface'

    user_binance_service:
        class: AppBundle\Service\UserBinanceService
        arguments:
            - 'Binance\API'

    consumer.order:
        class: AppBundle\Consumer\OrderConsumer
        arguments:
            - '@AppBundle\Service\BinanceService'
            - '@AppBundle\Service\TwitterService'
            - '@Doctrine\ORM\EntityManagerInterface'
            - '@Symfony\Component\DependencyInjection\ContainerInterface'

    redis_service:
        class: AppBundle\Service\RedisService
        arguments:
            - '@doctrine_cache.providers.redis_cache'
        public: true

    user_binance_api_keys.listener:
      class: AppBundle\EventListener\UserBinanceApiKeysListener
      tags:
        - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
      arguments: ['@security.token_storage', '@router']
